int bricks_lvl_1[34][20]={
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	
};




















// if( (ball_y+ball_radius > i1*26) && (ball_x >(i2*80)) && (ball_x < ((i2+1)*80))  )
				// {
				// 	ball_y_speed = -ball_y_speed;
				// 	break;
				// }
				
				// if(ball_y_speed>0)
				// {
					if(  (ball_x+ball_radius > i2*80) && (ball_x-ball_radius < i2*80+80) && (ball_y-ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)) )
					{	
						
						
						// if((ball_x+ball_radius > i2*80) && (ball_x-ball_radius < i2*80+80))
						// {
							ball_y_speed=-ball_y_speed;
							return;
						// }

						// if()
						
						
					}

				// }

				// if(ball_y_speed<0)
				// {
				// 	if(  (ball_x-ball_radius > i2*80) && (ball_x-ball_radius < i2*80+80) && (ball_y+ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)) )
				// 	{	
						
						
				// 		if((ball_x+ball_radius > i2*80) && (ball_x+ball_radius < i2*80+80))
				// 		{
				// 			ball_y_speed=-ball_y_speed;
				// 			return;
				// 		}
						
						
				// 	}	
				// }

				// if(ball_x_speed>0)
				// {
				// 	if(  (ball_x+ball_radius > i2*80) && (ball_x+ball_radius < i2*80+80) && (ball_y-ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)) )
				// 	{	
						
						
				// 		if((ball_y+ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)))
				// 		{
				// 			ball_x_speed=-ball_x_speed;
				// 			return;
				// 		}
				// 	}
				// }

				// if(ball_x_speed>0)
				// {
				// 	if(  (ball_x+ball_radius > i2*80) && (ball_x+ball_radius < i2*80+80) && (ball_y-ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)) )
				// 	{	
						
						
				// 		if((ball_y-ball_radius < Screen_width- i1*26) && (ball_y-ball_radius > Screen_width- (i1*26+26)))
				// 		{
				// 			ball_x_speed=-ball_x_speed;
				// 			return;
				// 		}
				// 	}
				// }




				temp_i = ball_x/80;
	temp_j = (ball_y - Screen_width)/27;

	


	void Ball_x_collision() {
	
	for(i1=0;i1<34;i1++)
	{
		for(i2=0;i2<20;i2++)
		{
			if(bricks_lvl_1[i1][i2] == 1)
			{		
				if((ball_y-ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)) )
				{	
					if((ball_x+ball_radius > i2*80) && (ball_x-ball_radius < i2*80+80))
					{
						ball_x_speed = - ball_x_speed;
						return;
					}
						
				}
			}	
		}
	}
	

}

void Ball_y_collision() {
	
	for(i1=0;i1<34;i1++)
	{
		for(i2=0;i2<20;i2++)
		{
			if(bricks_lvl_1[i1][i2] == 1)
			{	
				if(  (ball_x+ball_radius > i2*80) && (ball_x-ball_radius < i2*80+80)) //&& (ball_y-ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)) )
				{	
					if((ball_y-ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)))
					{
						ball_y_speed = - ball_y_speed;
						return;
					}
						
				}
			}	
		}
	}
	

}











mainnn


if((ball_y-ball_radius <= Screen_width- i1*26) && (ball_y+ball_radius >= Screen_width- (i1*26+26)))
				{
					if((ball_x+ball_radius >= i2*80) && (ball_x-ball_radius <= i2*80+80))
					{
						ball_x_speed = - ball_x_speed;
						return;
					}
				}
				
				else if((ball_x+ball_radius >= i2*80) && (ball_x-ball_radius <= i2*80+80)) //&& (ball_y-ball_radius < Screen_width- i1*26) && (ball_y+ball_radius > Screen_width- (i1*26+26)))
				{	
					if((ball_y-ball_radius <= Screen_width- i1*26) && (ball_y+ball_radius >= Screen_width- (i1*26+26)))
					{
						ball_y_speed = - ball_y_speed;
						return;
					}
						
				}





				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,